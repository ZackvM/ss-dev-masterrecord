function buildcoordquery($request, $passedData) { 
       require_once(genAppFiles . "/dataconn/sspdo.zck");  
       session_start(); 
       $responseCode = 503;    
       $itemsfound = 0;
       $datarecord = "";
       $msg = "";
       $params = json_decode($passedData, true);
       switch ($params['qryType']) { 


//DIFFERENT COORDINATOR QUERY BUILDERS START HERE --------------------------------------           


         case 'BANK':
           //CHECK FIELDS FILLED IN CORRECTLY
           $allowWrite = 1;             
           if ( trim($params['site']) === "" && trim($params['dx']) === "" &&  trim($params['specimencategory']) === "" )  { 
              $msg .= " - Part of the Diagnosis Designation must be entered";
              $allowWrite = 0;     
           }
           if (trim($params['site']) === "" && trim($params['dx']) === "") { 
              $msg .= " - Either a Site and/or a Diagnosis must be specified";
              $allowWrite = 0;    
           }
           if ($params['prepFFPE'] !== 1 && $params['prepFIXED'] !== 1 && $params['prepFROZEN'] !== 1) { 
              $msg .= "\r\n - At least one preparation must be specified";
              $allowWrite = 0;    
           }
           $ssid = session_id();
           $usrSQL = "SELECT originalAccountName FROM four.sys_userbase where sessionid = :sessionid";
           $usrR = $conn->prepare($usrSQL);
           $usrR->execute(array(':sessionid' => $ssid));
           if ($usrR->rowCount() < 1) { 
               $msg .= "\r\n - SESSION KEY IS INVALID.  LOG OUT OF SCIENCESERVER AND LOG BACK IN"; 
               $allowWrite = 0; 
           } else { 
               $user = $usrR->fetch(PDO::FETCH_ASSOC);
               $usrName = $user['originalAccountName'];
           }
           if ($allowWrite === 1) { 
             //WRITE TO QRY BUILD TABLE
               //insert into four.srv_coord_qry_capture (qryselector, bywhom, qrytype, jsoncriteria, onwhen) values('abcdefg123','proczack','BANK','{\'criteria\':\'critval1\'}',now())        
               $objid = strtolower( generateRandomString() );
               $insSQL = "insert into four.srv_coord_qry_capture (qryselector, bywhom, qrytype, jsoncriteria, onwhen) values(:objid,:user,:qrytype,:criteria,now())";
               $rs = $conn->prepare($insSQL); 
               $rs->execute(
                 array(
                      ':objid'      => $objid
                     ,':user'       => $usrName
                     ,':qrytype'    => $params['qryType']
                     ,':criteria'   => $passedData 
                 )
               );
               $urlid =  $conn->lastInsertId() . "-" . $objid;
               $datarecord = array("qryurl" => "data-coordinator/bank/{$urlid}");
               $responseCode = 200;
           }
           break;
  
         case 'SHIP':
             //{"qryType":"SHIP","shipdocnumber":"5852","sdstatus":"OPEN","sdshipfromdte":"2018-10-20","sdshiptodte":"2018-10-18","investigator":"INV3000"}                         
           $allowWrite = 1;
           if (trim($params['shipdocnumber']) === "" && trim($params['sdstatus']) === "" && trim($params['sdshipfromdte']) === "" && trim($params['sdshiptodte']) === "" && trim($params['investigator']) === "") { 
              $msg .= " - Some search criteria must be entered";
              $allowWrite = 0; 
           }                      
           if ((trim($params['sdshipfromdte']) !== "" && trim($params['sdshiptodte']) === "")  ||   (trim($params['sdshipfromdte']) === "" && trim($params['sdshiptodte']) !== "")) { 
              $msg .= " - For Date Range Searches:  Both a \"From\" and a \"To\" date must be entered";
              $allowWrite = 0;    
           }
           //TODO:  CHECK ONE DATE BEFORE ANOTHER
                      
           $ssid = session_id();
           $usrSQL = "SELECT originalAccountName FROM four.sys_userbase where sessionid = :sessionid";
           $usrR = $conn->prepare($usrSQL);
           $usrR->execute(array(':sessionid' => $ssid));
           if ($usrR->rowCount() < 1) { 
               $msg .= "\r\n - SESSION KEY IS INVALID.  LOG OUT OF SCIENCESERVER AND LOG BACK IN"; 
               $allowWrite = 0; 
           } else { 
               $user = $usrR->fetch(PDO::FETCH_ASSOC);
               $usrName = $user['originalAccountName'];
           }
           if ($allowWrite === 1) { 
               $objid = strtolower( generateRandomString() );
               $insSQL = "insert into four.srv_coord_qry_capture (qryselector, bywhom, qrytype, jsoncriteria, onwhen) values(:objid,:user,:qrytype,:criteria,now())";
               $rs = $conn->prepare($insSQL); 
               $rs->execute(
                 array(
                      ':objid'      => $objid
                     ,':user'       => $usrName
                     ,':qrytype'    => $params['qryType']
                     ,':criteria'   => $passedData 
                 )
               );
               $urlid =  $conn->lastInsertId() . "-" . $objid;
               $datarecord = array("qryurl" => "data-coordinator/ship-doc/{$urlid}");
               $responseCode = 200;
           }                 
         break;
  
     
     
//DIFFERENT COORDINATOR QUERY BUILDERS END   HERE --------------------------------------           
  
  
         default:
           $msg = "MALFORMED QUERY PARAMETER DATA STRUCTURE";
       }
       $rows['statusCode'] = $responseCode; 
       $rows['data'] = array('MESSAGE' => $msg, 'ITEMSFOUND' => $itemsfound,  'DATA' => $datarecord);
       return $rows;
    } 



////FROM PAGECOMPNENT

            //THIS WAS THE MULTI DIV QUERY SCREEN
            //$BSShipGrid = buildShippingQryGrid();
            //<td style="width: 6vw;height: 6vh;" valign=bottom><table class=tblBtn style="width: 6vw;" onclick="changeSearchGrid('shipdiv');"><tr><td><center>Shipping</td></tr></table></td>
            //$BSBankGrid = buildBSBankGrid();             
            //<td style="width: 6vw;height: 6vh;" valign=bottom><table class=tblBtn style="width: 6vw;" onclick="changeSearchGrid('bankdiv');"><tr><td><center>Bank</td></tr></table></td>
            //<div class=gridDiv id=shipdiv>{$BSShipGrid}</div>
            //<div class=gridDiv id=bankdiv>{$BSBankGrid}</div>            
            /*
            TO USE THESE ABOVE DIVS THE FOLLOWING CODE NEED TO BE PUT BACK IN THE JAVASCRIPTR
             *     case 'bankqry':
      dta['qryType'] = 'BANK';
      dta['site'] = byId('bnkSite').value.trim();
      dta['dx'] = byId('bnkDiagnosis').value.trim();
      dta['specimencategory'] = byId('bnkSpecCat').value.trim();
      dta['prepFFPE'] = (byId('bnkPrpFFPE').checked) ? 1 : 0;
      dta['prepFIXED'] = (byId('bnkPrpFixed').checked) ? 1 : 0; 
      dta['prepFROZEN'] = (byId('bnkPrpFrozen').checked) ? 1 : 0;
      criteriagiven = 1;
    break;
    case 'shipqry':
      dta['qryType'] = 'SHIP';
      dta['shipdocnumber'] = byId('shpShipDocNbr').value.trim();
      dta['sdstatus'] = byId('qryShpStatusValue').value.trim();
      dta['sdshipfromdte'] = byId('shpQryFromDateValue').value.trim();
      dta['sdshiptodte'] = byId('shpQryToDateValue').value.trim();
      dta['investigator'] = byId('shpShipInvestigator').value.trim();
      criteriagiven = 1;
    break;   
            */